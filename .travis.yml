os:
  - linux
  - osx

# macOS: 10.15.
osx_image: xcode11.5
# Linux: Ubuntu Linux 18.04 and clang 7.
dist: bionic
compiler: clang

env:
  matrix:
  - BAZEL_VERSION=3.1.0

before_install:
  - OS=linux
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then OS=darwin; fi
  # Install Bazel.
  - GH_BASE="https://github.com/bazelbuild/bazel/releases/download/$BAZEL_VERSION"
  - GH_ARTIFACT="bazel-$BAZEL_VERSION-installer-$OS-x86_64.sh"
  - CI_BASE="http://ci.bazel.io/job/Bazel/JAVA_VERSION=1.8,PLATFORM_NAME=$OS-x86_64/lastSuccessfulBuild/artifact/output/ci"
  - CI_ARTIFACT="bazel--installer.sh"
  - URL="$GH_BASE/$GH_ARTIFACT"
  - if [[ "$BAZEL_VERSION" == "HEAD" ]]; then CI_ARTIFACT="`wget -qO- $CI_BASE | grep
    -o 'bazel-[-_a-zA-Z0-9\.]*-installer.sh' | uniq`"; fi
  - if [[ "$BAZEL_VERSION" == "HEAD" ]]; then URL="$CI_BASE/$CI_ARTIFACT"; fi
  - echo $URL
  - wget -O install.sh $URL
  - chmod +x install.sh
  - "./install.sh --user"
  - rm -f install.sh

script:
  # Print some LLVM config options, useful for debugging.
  - bazel run //10.0.0:llvm-config -- --system-libs  | tr ' ' '\n' | sed '/^$/d ;s/^/    "/ ; s/$/",/'
  - bazel run //10.0.0:llvm-config -- --cxxflags  | tr ' ' '\n' | sed '/^$/d ;s/^/    "/ ; s/$/",/'
  - bazel run //10.0.0:llvm-config -- --ldflags  | tr ' ' '\n' | sed '/^$/d ;s/^/    "/ ; s/$/",/'
  - bazel run //10.0.0:llvm-config -- --libs  | tr ' ' '\n' | sed '/^$/d ;s/^/    "/ ; s/$/",/'
  # Run the tests.
  - bazel test //... --keep_going --sandbox_debug --verbose_failures  --test_output=errors
